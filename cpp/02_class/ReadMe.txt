c++ class 

a1.cpp class: father and son
    写习惯py和R了，有些毛病要改: 
        * 每行都要分号结尾; 类定义的结尾也要加分号;
        * 输出使用 printf(), 而不是 print();
        * 变量使用前要声明;
        * 类内部成员变量都要加上 访问控制语句 public/protected/private

    a1_2.cpp 构造函数和析构函数;



类的继承和派生： class <派生类名>:<继承方式> <基类名>{}; 继承方法通常用 public
a2.cpp 继承: 图形，子类矩形
a3.cpp 多继承， C++ 支持多继承

运算符重载
a4_overloading_operator.cpp 重载运算符 operator==

重载函数
a5_overloading_function.cpp 和类外的函数重载一样

多态: 根据不同的类调用不同的方法
a6_polymorphic.cpp  静态多态：编译期确定调用哪个类的方法
a6_polymorphic2.cpp 动态多态：运行期确定调用哪个子类的方法

接口
    接口描述了类的行为和功能，是标准和规范，而不需要完成类的功能实现。
    C++ 接口是用抽象类来实现的，如果类中至少有一个函数被声明为纯虚函数，则这个类就是抽象类。
    设计抽象类的目的，是为了给其他类提供一个可以继承的基类。抽象类不能用于实例化对象，它只能作为接口使用。
        如果试图实例化一个抽象类的对象，会导致编译错误。
    如果一个基类的派生类需要实例化，则必须实现每个虚函数的定义，如果没有在派生类中纯虚函数的定义会导致编译错误。
    可用于实例化对象的类被称为具体类。



动态内存管理(new 申请的是一个类)
b1.cpp 使用new申请内存，使用delete释放内存
    datetype *pointer = new datatype; //会调用构造函数
    delete pointer; //会调用析构函数

